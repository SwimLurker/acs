<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.5.xsd">
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/hms.properties</value>
            </list>
        </property>
    </bean>
    <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL">
            <value>${messaging.message_broker_url}</value>
        </property>
    </bean>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="pubSubDomain" value="true" />
    </bean>
    <bean id="deviceQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${messaging.queue_name_syncdevice}</value>
        </constructor-arg>
    </bean>
    <bean id="commandResultQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${messaging.queue_name_commandresult}</value>
        </constructor-arg>
    </bean>
    <bean id="eventQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${messaging.queue_name_event}</value>
        </constructor-arg>
    </bean>
    <bean id="commandQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>${messaging.queue_name_command}</value>
        </constructor-arg>
    </bean>
    <bean id="jsonStringMapper" class="org.slstudio.acs.hms.messaging.mapper.JSONStringMapper" />
    <bean id="jsonSyncDeviceMapper" class="org.slstudio.acs.hms.messaging.mapper.JSONSyncDevicesMapper" />
    <!-- message senders -->
    <bean id="commandResultSender" class="org.slstudio.acs.hms.messaging.sender.JMSMessageSender">
        <property name="jmsTemplate" ref="jmsTemplate" />
        <property name="destination" ref="commandResultQueue" />
        <property name="objectMapper" ref="jsonStringMapper" />
    </bean>
    <bean id="eventSender" class="org.slstudio.acs.hms.messaging.sender.JMSMessageSender">
        <property name="JmsTemplate" ref="jmsTemplate" />
        <property name="destination" ref="eventQueue" />
        <property name="objectMapper" ref="jsonStringMapper" />
    </bean>
    <!-- message sender used for test message receiver -->
    <bean id="commandSender" class="org.slstudio.acs.hms.messaging.sender.JMSMessageSender">
        <property name="jmsTemplate" ref="jmsTemplate" />
        <property name="destination" ref="deviceQueue" />
        <property name="objectMapper" ref="jsonStringMapper" />
    </bean>
    <bean id="syncDevicesSender" class="org.slstudio.acs.hms.messaging.sender.JMSMessageSender">
        <property name="jmsTemplate" ref="jmsTemplate" />
        <property name="destination" ref="deviceQueue" />
        <property name="objectMapper" ref="jsonSyncDeviceMapper" />
    </bean>

    <!-- message handler -->
    <bean name="debugMessageHandler" class="org.slstudio.acs.hms.messaging.handler.DebugMessageHandler" />
    <bean name="syncDevicesMessageHandler" class="org.slstudio.acs.hms.messaging.handler.SyncDevicesMessageHandler">
        <property name="deviceManager" ref="deviceManager" />
    </bean>

    <!-- command message receiver -->
    <bean name="comamndHandlerList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
               <ref bean="debugMessageHandler" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="commandReceiver" class="org.slstudio.acs.hms.messaging.receiver.StringMessageReceiver">
        <property name="objectMapper" ref="jsonStringMapper" />
        <property name="sourceName" value="${messaging.queue_name_command}" />
        <property name="handlers" ref="comamndHandlerList" />
    </bean>
    <bean id="commandListener" class="org.slstudio.acs.hms.messaging.listener.JMSTextMessageListener">
        <property name="receiver" ref="commandReceiver" />
    </bean>
    <bean id="commandListenerContainer"	class="org.springframework.jms.listener.DefaultMessageListenerContainer"  >
        <property name="concurrentConsumers" value="10" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="commandQueue" />
        <property name="messageListener" ref="commandListener" />
        <property name="pubSubNoLocal" value="false" />
        <property name="autoStartup" value="false" />
    </bean>

    <!-- sync devices info message receiver -->
    <bean name="syncDevicesHandlerList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="debugMessageHandler" />
                <ref bean="syncDevicesMessageHandler" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="syncDevicesReceiver" class="org.slstudio.acs.hms.messaging.receiver.StringMessageReceiver">
        <property name="objectMapper" ref="jsonSyncDeviceMapper" />
        <property name="sourceName" value="${messaging.queue_name_syncdevice}" />
        <property name="handlers" ref="syncDevicesHandlerList" />
    </bean>
    <bean id="syncDevicesListener" class="org.slstudio.acs.hms.messaging.listener.JMSTextMessageListener">
        <property name="receiver" ref="syncDevicesReceiver" />
    </bean>
    <bean id="syncDeviceListenerContainer"	class="org.springframework.jms.listener.DefaultMessageListenerContainer"  >
        <property name="concurrentConsumers" value="10" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="deviceQueue" />
        <property name="messageListener" ref="syncDevicesListener" />
        <property name="pubSubNoLocal" value="false" />
        <property name="autoStartup" value="false" />
    </bean>


    <!-- message receiver used for test message sender -->
    <!-- command result message receiver -->
    <bean name="commandResultHandlerList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="debugMessageHandler" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="commandResultReceiver" class="org.slstudio.acs.hms.messaging.receiver.StringMessageReceiver">
        <property name="objectMapper" ref="jsonStringMapper" />
        <property name="sourceName" value="${messaging.queue_name_commandresult}" />
        <property name="handlers" ref="commandResultHandlerList" />
    </bean>
    <bean id="commandResultListener" class="org.slstudio.acs.hms.messaging.listener.JMSTextMessageListener">
        <property name="receiver" ref="commandResultReceiver" />
    </bean>
    <bean id="commandResultListenerContainer"	class="org.springframework.jms.listener.DefaultMessageListenerContainer" >
        <property name="concurrentConsumers" value="10" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="commandResultQueue" />
        <property name="messageListener" ref="commandResultListener" />
        <property name="pubSubNoLocal" value="false" />
        <property name="autoStartup" value="false" />
    </bean>

    <!-- event message receiver -->
    <bean name="eventHandlerList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="debugMessageHandler" />
            </list>
        </constructor-arg>
    </bean>
    <bean id="eventReceiver" class="org.slstudio.acs.hms.messaging.receiver.StringMessageReceiver">
        <property name="objectMapper" ref="jsonStringMapper" />
        <property name="sourceName" value="${messaging.queue_name_event}" />
        <property name="handlers" ref="eventHandlerList" />
    </bean>
    <bean id="eventListener" class="org.slstudio.acs.hms.messaging.listener.JMSTextMessageListener">
        <property name="receiver" ref="eventReceiver" />
    </bean>
    <bean id="eventListenerContainer"	class="org.springframework.jms.listener.DefaultMessageListenerContainer" >
        <property name="concurrentConsumers" value="10" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="eventQueue" />
        <property name="messageListener" ref="eventListener" />
        <property name="pubSubNoLocal" value="false" />
        <property name="autoStartup" value="false" />
    </bean>
    <!-- bean for activemq start, use for debugging -->
    <bean id="activeMQ" class="org.slstudio.acs.util.ActiveMQStarter">
        <property name="fork" value="true" />
        <property name="configUri" value="${messaging.activemq_borkerurl}" />
        <property name="homeDir" value="${messaging.activemq_homedir}" />
    </bean>
</beans>
